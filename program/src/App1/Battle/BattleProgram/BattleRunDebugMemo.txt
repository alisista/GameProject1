
/*
if (input1.rinput(1, input1.INPUT_Z) == 1)
            {
                s1.battle_run.battle_member_group_status_control.hp_add2(100);
            }

            if (input1.rinput(1, input1.INPUT_X) == 1)
            {
                battle_enemy_group.battle_enemy_appear_control.debug_enemy_create();
            }

            if (input1.rinput(1, input1.INPUT_C) == 1)
            {
                battle_mana.debug_mana_full();
            }

            if (input1.rinput(1, input1.INPUT_Z) == 1)
            {
                battle_mana.battle_mana_use_calc();
                battle_mana.battle_mana_use();
            }
            

            if (input1.rinput(1, input1.INPUT_X) == 1)
            {
                battle_mana.turn_end_mana_cure();
            }

            if (input1.rinput(1, input1.INPUT_C) == 1)
            {
                battle_mana.debug_mana_full();
            }      


 if (input1.rinput(1, input1.INPUT_Z) == 1)
            {
                s1.battle_run.battle_enemy_group_attack_run.enemy_all_attack_set();

                //    battle_skill.skill_use(0, 0);

                //battle_flow1.battle_flow_set(battle_flow1.BATTLE_FLOW_MEMBER_SKILL);
            }

            if (input1.rinput(1, input1.INPUT_X) == 1)
            {
                //    battle_skill.skill_use(0, 1);

                {
                    int num = 0;

                    s1.battle_run.battle_enemy_group.battle_enemy[num].battle_enemy_skill[0].skill_set("テスト", 60);

                    s1.battle_run.battle_enemy_group.battle_enemy[num].attack_move_set();

                    s1.battle_run.battle_enemy_group_attack_run.battle_enemy_attack_run[num].attack_wait_set();
                }
            }

            if (input1.rinput(1, input1.INPUT_C) == 1)
            {
                //    battle_skill.skill_use(0, 1);

                {
                    s1.battle_run.battle_enemy_group.battle_enemy[0].battle_enemy_skill[0].skill_set("テスト", 60);
                    s1.battle_run.battle_enemy_group.battle_enemy[1].battle_enemy_skill[0].skill_set("テスト", 60);
                    s1.battle_run.battle_enemy_group.battle_enemy[2].battle_enemy_skill[0].skill_set("テスト", 60);

                    s1.battle_run.battle_enemy_group.battle_enemy[0].battle_enemy_skill[1].skill_set("テスト２", 60);
                    s1.battle_run.battle_enemy_group.battle_enemy[1].battle_enemy_skill[1].skill_set("テスト２", 60);
                    s1.battle_run.battle_enemy_group.battle_enemy[2].battle_enemy_skill[1].skill_set("テスト２", 60);
                }
            }


if (input1.rinput(1, input1.INPUT_Z) == 1)
            {
                battle_flow1.battle_flow_set(battle_flow1.BATTLE_FLOW_ENCHANTMENT);
            }

            if (input1.rinput(1, input1.INPUT_X) == 1)
            {
                String st1 = "テストメッセージ９０１２３４５６７８９０";

                //メッセージテスト
                battle_message_window.message_stock(st1);
            }


if (input1.rinput(1, input1.INPUT_Z) == 1)
    {
        battle_flow1.battle_flow_set(battle_flow1.BATTLE_MEMBER_ATTACK_CALL);
    }

    if (input1.rinput(1, input1.INPUT_X) == 1)
    {
        //    s1.dialog_window1.create(s1.dialog_window1.TEST_WINDOW1, 0, 0, 0);

    }

    if (input1.rinput(1, input1.INPUT_C) == 1)
    {
        s1.fade_run.create1(s1.fade_run.FADE_WAIT_60, 1, 1, 0);

        s1.wait_action.waitact_set(s1.wait_action.DUNGEON_TO_BASE, 60);

        s1.dialog_window1.create1(s1.dialog_window1.DIALOG_GAMEOVER_CONTINUE, 0, 0, 0);
    }
*/

/*
    if (input1.rinput(1, input1.INPUT_C) == 1)
    {
        int link1 = 0;

        //    battle_member_group.battle_member[link1].attack_move_set();

        battle_member_group_attack_run.member_all_attack_set();
    }


    if (input1.rinput(1, input1.INPUT_X) == 1)
    {
        //    int link1 = m1.rand(2);//0;

        //    battle_enemy_group.battle_enemy[link1].attack_move_set();

        battle_enemy_group_attack_run.enemy_all_attack_set();
    }


    if (input1.rinput(1, input1.INPUT_Z) == 1)
    {
        int damage_num = m1.rand(100) + 50;
        int week_1_and_resist_2 = 0;
        int att1 = 1;

        battle_member_group_status_control.hp_damage_set(damage_num, 0, 0);
        battle_member_group_status_control.hp_damage_draw_effect_set(damage_num, 0, week_1_and_resist_2, 0, 0, att1, 0);
    } 
*/


/*
    if (input1.rinput(1, input1.INPUT_Z) == 1)
    {
        int damage_num = m1.rand(100) + 50;
        int enemylink = 0;
        int week_1_and_resist_2 = 0;
        int att1 = 1;

        battle_enemy_group.battle_enemy[enemylink].damage_set(damage_num, 0, 0);
        battle_enemy_group.battle_enemy[enemylink].damage_draw_effect_set(damage_num, 0, week_1_and_resist_2, 0, 0, att1, 0);
    }

    if (input1.rinput(1, input1.INPUT_X) == 1)
    {
        int damage_num = m1.rand(100) + 50;
        int enemylink = 0;
        int week_1_and_resist_2 = 1;
        int att1 = 2;

        battle_enemy_group.battle_enemy[enemylink].damage_set(damage_num, 0, 0);
        battle_enemy_group.battle_enemy[enemylink].damage_draw_effect_set(damage_num, 0, week_1_and_resist_2, 0, 0, att1, 0);
    }

    if (input1.rinput(1, input1.INPUT_C) == 1)
    {
        int damage_num = m1.rand(100) + 50;
        int enemylink = 0;
        int week_1_and_resist_2 = 2;
        int att1 = 3;

        battle_enemy_group.battle_enemy[enemylink].damage_set(damage_num, 0, 0);
        battle_enemy_group.battle_enemy[enemylink].damage_draw_effect_set(damage_num, 0, week_1_and_resist_2, 0, 0, att1, 0);
    }
    */